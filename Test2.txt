Arithmetic coding is a data compression technique that encodes data (the data string) by creating a code string which represents a
fractional value on the number line between 0 and 1. The coding algorithm is symbolwise recursive; i.e., it operates upon and
encodes (decodes) one data symbol per iteration or recursion. On each recursion, the algorithm successively partitions an interval
of the number line between 0 and I, and retains one of the partitions as the new interval. Thus, the algorithm successively deals
with smaller intervals, and the code string, viewed as a magnitude, lies in each of the nested intervals. The data string is recovered
by using magnitude comparisons on the code string to recreate how the encoder must have successively partitioned and retained
each nested subinterval. Arithmetic coding differs considerably from the more familiar compression coding techniques, such as
prefix (Huffman) codes. Also, it should not be confused with error control coding, whose object is to detect and correct errors in
computer operations. This paper presents the key notions of arithmetic compression coding by means of simple examples.